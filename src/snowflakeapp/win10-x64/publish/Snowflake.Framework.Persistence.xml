<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Snowflake.Framework.Persistence</name>
    </assembly>
    <members>
        <member name="P:Snowflake.Persistence.SqliteDatabase.DatabaseName">
            <inheritdoc/>
        </member>
        <member name="M:Snowflake.Persistence.SqliteDatabase.GetConnection">
            <inheritdoc/>
        </member>
        <member name="M:Snowflake.Persistence.SqliteDatabase.Query``1(System.Func{System.Data.IDbConnection,``0})">
            <summary>
            Queries on a new connection to the database.
            The connection will be safely closed after the operation.
            </summary>
            <typeparam name="T">The type the query will return</typeparam>
            <param name="queryFunction">A function to query the database using the opened connection</param>
            <returns>The requested data.</returns>
        </member>
        <member name="M:Snowflake.Persistence.SqliteDatabase.Execute(System.Action{System.Data.IDbConnection})">
            <summary>
            Executes on a new connection to the database.
            The connection will be safely closed after the operation.
            </summary>
            <param name="queryFunction">A function to query the database using the opened connection</param>
        </member>
        <member name="M:Snowflake.Persistence.SqliteDatabase.Query``1(System.String,System.Object)">
            <summary>
            Queries on a new connection to the database.
            The connection will be safely closed after the operation.
            </summary>
            <typeparam name="T">The type the query will return</typeparam>
            <param name="query">The SQL query to execute</param>
            <param name="param">The query parameters</param>
            <returns>The requested data.</returns>
        </member>
        <member name="M:Snowflake.Persistence.SqliteDatabase.Execute(System.String,System.Object)">
            <summary>
            Executes on a new connection to the database.
            The connection will be safely closed after the operation.
            </summary>
            <param name="query">The SQL query to execute</param>
            <param name="param">The query parameters</param>
        </member>
        <member name="M:Snowflake.Persistence.SqliteDatabase.QueryFirstOrDefault``1(System.String,System.Object)">
            <summary>
            Executes a single row query
            The connection will be safely closed after the operation.
            </summary>
            <typeparam name="T">The type the query will return</typeparam>
            <param name="query">The SQL query to execute</param>
            <param name="param">The query parameters</param>
            <returns>The requested data, or null if not present.</returns>
        </member>
        <member name="M:Snowflake.Persistence.SqliteDatabase.CreateTable(System.String,System.String[])">
            <summary>
            Creates a table in the database
            </summary>
            <param name="tableName">The name of the table to create</param>
            <param name="columns">The names of the columns to create</param>
        </member>
        <member name="M:Snowflake.Persistence.SqliteMemoryDatabase.Query``1(System.Func{System.Data.Common.DbConnection,``0})">
            <summary>
            Queries on a new connection to the database.
            The connection will be safely closed after the operation.
            </summary>
            <typeparam name="T">The type the query will return</typeparam>
            <param name="queryFunction">A function to query the database using the opened connection</param>
            <returns>The requested data.</returns>
        </member>
        <member name="M:Snowflake.Persistence.SqliteMemoryDatabase.Execute(System.Action{System.Data.Common.DbConnection})">
            <summary>
            Executes on a new connection to the database.
            The connection will be safely closed after the operation.
            </summary>
            <param name="queryFunction">A function to query the database using the opened connection</param>
        </member>
        <member name="M:Snowflake.Persistence.SqliteMemoryDatabase.Query``1(System.String,System.Object)">
            <summary>
            Queries on a new connection to the database.
            The connection will be safely closed after the operation.
            </summary>
            <typeparam name="T">The type the query will return</typeparam>
            <param name="query">The SQL query to execute</param>
            <param name="param">The query parameters</param>
            <returns>The requested data.</returns>
        </member>
        <member name="M:Snowflake.Persistence.SqliteMemoryDatabase.Execute(System.String,System.Object)">
            <summary>
            Executes on a new connection to the database.
            The connection will be safely closed after the operation.
            </summary>
            <param name="query">The SQL query to execute</param>
            <param name="param">The query parameters</param>
        </member>
        <member name="M:Snowflake.Persistence.SqliteMemoryDatabase.QueryFirstOrDefault``1(System.String,System.Object)">
            <summary>
            Executes a single row query
            The connection will be safely closed after the operation.
            </summary>
            <typeparam name="T">The type the query will return</typeparam>
            <param name="query">The SQL query to execute</param>
            <param name="param">The query parameters</param>
            <returns>The requested data, or null if not present.</returns>
        </member>
        <member name="M:Snowflake.Persistence.SqliteMemoryDatabase.CreateTable(System.String,System.String[])">
            <summary>
            Creates a table in the database
            </summary>
            <param name="tableName">The name of the table to create</param>
            <param name="columns">The names of the columns to create</param>
        </member>
        <member name="M:Snowflake.Persistence.SqliteMemoryDatabase.SaveTo(Snowflake.Persistence.SqliteDatabase)">
            <summary>
            Saves the in-memory databse to a real database
            </summary>
            <param name="database">The real database to back up to</param>
        </member>
        <member name="M:Snowflake.Persistence.SqliteMemoryDatabase.LoadFrom(Snowflake.Persistence.SqliteDatabase)">
            <summary>
            Loads from a disk database to this in-memory database
            </summary>
            <param name="database">The database to load from</param>
        </member>
    </members>
</doc>
